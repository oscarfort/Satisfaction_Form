# BD
import sqlite3

def init_bd():

    db = sqlite3.connect('dades.db')                                   
    cursor = db.cursor()

    cursor.execute("""PRAGMA foreign_keys = ON""")
    
    cursor.execute("""CREATE TABLE IF NOT EXISTS ALUMNE(
    ID INT NOT NULL,
    NAME CHAR(20) NOT NULL,
    SECOND_NAME CHAR(20) NOT NULL,
    AGE CHAR(10) NOT NULL,
    SCHOOL CHAR(30) NOT NULL,
    COURSE CHAR(30) NOT NULL,
    GENDER CHAR(30) NOT NULL,
    PRIMARY KEY(ID)
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS PREGUNTES_INF_PRI(
    ID INT NOT NULL,
    PREGUNTA_1 CHAR(30) NOT NULL,
    PREGUNTA_2 CHAR(30) NOT NULL,
    PREGUNTA_3 CHAR(30) NOT NULL,
    PREGUNTA_4 CHAR(30) NOT NULL,
    PREGUNTA_5 CHAR(30) NOT NULL,
    PREGUNTA_6 CHAR(30) NOT NULL,
    PREGUNTA_7 CHAR(30) NOT NULL,
    PREGUNTA_8 CHAR(30) NOT NULL,
    PREGUNTA_9 CHAR(30) NOT NULL,
    PREGUNTA_10 CHAR(30) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (ID) REFERENCES ALUMNE(ID)
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS PREGUNTES_SEC_BAT(
    ID INT NOT NULL,
    PREGUNTA_1 CHAR(30) NOT NULL,
    PREGUNTA_2 CHAR(30) NOT NULL,
    PREGUNTA_3 CHAR(30) NOT NULL,
    PREGUNTA_4 CHAR(30) NOT NULL,
    PREGUNTA_5 CHAR(30) NOT NULL,
    PREGUNTA_6 CHAR(30) NOT NULL,
    PREGUNTA_7 CHAR(30) NOT NULL,
    PREGUNTA_8 CHAR(30) NOT NULL,
    PREGUNTA_9 CHAR(30) NOT NULL,
    PREGUNTA_10 CHAR(30) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY (ID) REFERENCES ALUMNE(ID)
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS SCHOOLS(
    SCHOOL_ID INT NOT NULL,
    SCHOOL_NAME CHAR(20) NOT NULL,
    PRIMARY KEY(SCHOOL_ID)
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS LOGGED_USERS(
    EMAIL CHAR(40) NOT NULL,
    PASSWORD CHAR(40) NOT NULL,
    NAME CHAR(20) NOT NULL,
    SECOND_NAME CHAR(20) NOT NULL,
    SCHOOL CHAR(30) NOT NULL,
    COURSE CHAR(30) NOT NULL,
    GENDER CHAR(30) NOT NULL,
    ROLE CHAR(30) NOT NULL,
    PRIMARY KEY(EMAIL),
    FOREIGN KEY (SCHOOL) REFERENCES SCHOOLS(SCHOOL_NAME)
    )""")

    # cursor.execute("""CREATE TRIGGER befo_insert BEFORE INSERT ON emp_details
    # BEGIN
    # SELECT CASE 
    # WHEN ((SELECT school_id, school_name FROM schools WHERE schools.school_id = NEW.school_id ) ISNULL) 
    # THEN RAISE(INSERT INTO SCHOOLS VALUES(NEW.school_id, NEW.school_name))
    # END; 
    # END;""")
    